// 멀티모듈 루트 프로젝트 설정
plugins {
	id 'java'
	alias(libs.plugins.spring.boot) apply false
	alias(libs.plugins.spring.dependency.management) apply false
	alias(libs.plugins.asciidoctor) apply false
	alias(libs.plugins.spotless) apply false
	alias(libs.plugins.restdocs.api.spec) apply false
}

// 전역 변수 설정 (Version Catalog로 이관됨)

// 전체 프로젝트 공통 설정
allprojects {
	group = 'bottlenote'
	version = '0.0.1-SNAPSHOT'

	repositories {
		mavenCentral()
	}

	java {
		sourceCompatibility = JavaVersion.VERSION_21
		targetCompatibility = JavaVersion.VERSION_21
	}
}

// 서브모듈 공통 설정
subprojects {
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java-test-fixtures'
	apply plugin: 'maven-publish'

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${libs.versions.spring.cloud.get()}"
		}
	}

	dependencies {
		// Spring Boot 기본 번들
		implementation libs.bundles.spring.boot.default
		// Lombok
		compileOnly libs.lombok
		annotationProcessor libs.lombok
		testCompileOnly libs.lombok
		testAnnotationProcessor libs.lombok
		// 공통 유틸리티
		implementation libs.bundles.utilities
	}
	// 서브모듈은 기본적으로 라이브러리 JAR 생성
	bootJar.enabled = false
	jar.enabled = true

	// 테스트 설정
	test {
		useJUnitPlatform()
	}
}

// 루트 프로젝트는 실행 가능한 JAR을 생성하지 않음

// 전체 프로젝트 태스크
tasks.register('spotlessApply') {
	description = '전체 모듈 Spotless 적용'
	group = 'formatting'
	dependsOn subprojects.findAll { it.tasks.findByName('spotlessApply') }.collect { it.tasks.spotlessApply }
}

tasks.register('spotlessCheck') {
	description = '전체 모듈 Spotless 검증'
	group = 'formatting'
	dependsOn subprojects.findAll { it.tasks.findByName('spotlessCheck') }.collect { it.tasks.spotlessCheck }
}

// 전체 프로젝트 테스트 태스크
tasks.register('integration_test') {
	description = '전체 모듈 통합 테스트 실행'
	group = 'verification'
	dependsOn subprojects.findAll { it.tasks.findByName('integration_test') }.collect { it.tasks.integration_test }
}

tasks.register('unit_test') {
	description = '전체 모듈 단위 테스트 실행'
	group = 'verification'
	dependsOn subprojects.findAll { it.tasks.findByName('unit_test') }.collect { it.tasks.unit_test }
}

tasks.register('check_rule_test') {
	description = '전체 모듈 아키텍처 규칙 테스트 실행'
	group = 'verification'
	dependsOn subprojects.findAll { it.tasks.findByName('check_rule_test') }.collect { it.tasks.check_rule_test }
}
