// 멀티모듈 루트 프로젝트 설정
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.9' apply false
	id 'io.spring.dependency-management' version '1.1.4' apply false
	id "org.asciidoctor.jvm.convert" version "4.0.2" apply false
	id 'com.diffplug.spotless' version "7.0.2" apply false
	id 'com.epages.restdocs-api-spec' version '0.19.2' apply false
}

// 전역 변수 설정
ext {
	queryDslVersion = "6.11"
	springCloudVersion = "2022.0.5"
}

// 전체 프로젝트 공통 설정
allprojects {
	group = 'bottlenote'
	version = '0.0.1-SNAPSHOT'

	repositories {
		mavenCentral()
	}

	java {
		sourceCompatibility = JavaVersion.VERSION_21
		targetCompatibility = JavaVersion.VERSION_21
	}
}

// 서브모듈 공통 설정
subprojects {
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	dependencies {
		// 서브모듈 기본 의존성
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

		// 공통 유틸리티
		implementation 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		implementation 'org.apache.commons:commons-lang3:3.12.0'
	}

	// 서브모듈은 기본적으로 라이브러리 JAR 생성
	bootJar.enabled = false
	jar.enabled = true

	// 테스트 설정
	test {
		useJUnitPlatform()
	}
}

// 루트 프로젝트는 실행 가능한 JAR을 생성하지 않음

// 전체 프로젝트 태스크
task spotlessApply {
	description = '전체 모듈 Spotless 적용'
	group = 'formatting'
	dependsOn subprojects.findAll { it.tasks.findByName('spotlessApply') }.collect { it.tasks.spotlessApply }
}

task spotlessCheck {
	description = '전체 모듈 Spotless 검증'
	group = 'formatting'
	dependsOn subprojects.findAll { it.tasks.findByName('spotlessCheck') }.collect { it.tasks.spotlessCheck }
}

// 전체 프로젝트 테스트 태스크
task integration_test {
	description = '전체 모듈 통합 테스트 실행'
	group = 'verification'
	dependsOn subprojects.findAll { it.tasks.findByName('integration_test') }.collect { it.tasks.integration_test }
}

task unit_test {
	description = '전체 모듈 단위 테스트 실행'
	group = 'verification'  
	dependsOn subprojects.findAll { it.tasks.findByName('unit_test') }.collect { it.tasks.unit_test }
}

task check_rule_test {
	description = '전체 모듈 아키텍처 규칙 테스트 실행'
	group = 'verification'
	dependsOn subprojects.findAll { it.tasks.findByName('check_rule_test') }.collect { it.tasks.check_rule_test }
}

// Git Hook용 태스크들
task preCommit {
	description = 'Git pre-commit용 태스크 (spotless + build)'
	group = 'git'
	dependsOn spotlessApply, build
}

task format {
	description = 'Spotless 적용 (git hook 단축어)'
	group = 'git'
	dependsOn spotlessApply
}
