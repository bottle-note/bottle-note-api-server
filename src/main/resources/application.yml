# 기본 서버 설정

app: # 애플리케이션 및 배포 정보
  info:
    server-name: ${SERVER_NAME:unknown}
    environment: ${SPRING_PROFILES_ACTIVE:local}
    git-branch: ${GIT_BRANCH:unknown}
    git-commit: ${GIT_COMMIT:unknown}
    git-build-time: ${BUILD_TIME:unknown}

server:
  port: ${SERVER_PORT:8080}

  servlet:
    encoding:
      charset: UTF-8

spring:
  profiles:
    include:
      - batch
      - logging
      - external
      - spec
  jackson:
    time-zone: Asia/Seoul
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost:3306}/${DB_NAME:bottle_note}?useSSL=${DB_USE_SSL:false}&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:localhost_bottle_note_username}
    password: ${DB_PASSWORD:localhost_bottle_note_password}
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      idle-timeout: 300000
      max-lifetime: 1800000
      connection-timeout: 30000
      pool-name: HikariPool-BottleNote
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:16379}
      password: ${REDIS_PASSWORD:}
      timeout: 15 # 연결 타임아웃 (초)
      cluster:
        enabled: false # 클러스터 모드 사용 여부
        nodes: ${REDIS_CLUSTER_NODES:} # 클러스터 노드 목록 (쉼표로 구분) 192.168.1.100:6379,192.168.1.101:6379,192.168.1.102:6379

  quartz:
    job-store-type: jdbc    # 메모리(memory) 또는 데이터베이스(jdbc)
    jdbc:
      initialize-schema: never    # 스키마 초기화 (always, never, embedded)
    properties:
      org:
        quartz:
          scheduler:
            instanceName: bottle_note_quartz_scheduler
            instanceId: AUTO
          threadPool:
            threadCount: 5
            threadPriority: 5
          jobStore:
            isClustered: true

# Spring Security
security:
  jwt:
    secret-key: ${JWT_SECRET_KEY:c2VjdXJlU2VjcmV0S2V5MTIzNDU2Nzg5MGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QWJDRGVGR2hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlrSg==}

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: [ "health", "prometheus" ]
      base-path: ${PROMETHEUS_BASE_PATH:/actuator}
  endpoint:
    health:
      show-details: always
