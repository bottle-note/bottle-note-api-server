name: 'Load Secrets from YAML'
description: 'YAML 파일에서 시크릿 로드 및 마스킹'

inputs:
  yaml-file:
    description: 'YAML 파일 경로'
    required: true
  prefix:
    description: '환경변수 접두사'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Install yq
      shell: bash
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq

    - name: Convert YAML to key=value format
      shell: bash
      run: |
        # YAML을 임시 .env 파일로 변환
        TEMP_ENV=$(mktemp)
        yq eval '.. | select(tag == "!!str") | (path | join(".")) + "=" + .' "${{ inputs.yaml-file }}" > "$TEMP_ENV"
        echo "TEMP_ENV_FILE=$TEMP_ENV" >> $GITHUB_ENV

    - name: Load and mask secrets
      shell: bash
      run: |
        # .env 파일을 읽으면서 마스킹 및 환경변수 설정
        while IFS='=' read -r key value; do
          # 빈 라인이나 주석 건너뛰기
          [[ -z "$key" || "$key" == \#* ]] && continue

          # 먼저 값을 마스킹 (출력 전에 반드시!)
          echo "::add-mask::${value}"

          # 키를 환경변수 형식으로 변환 (대문자, - 와 . 를 _로)
          ENV_KEY=$(echo "$key" | sed 's/\./_/g' | sed 's/-/_/g' | tr '[:lower:]' '[:upper:]')
          ENV_KEY="${{ inputs.prefix }}${ENV_KEY}"

          # 환경변수로 설정
          echo "${ENV_KEY}=${value}" >> $GITHUB_ENV

          # 설정 완료 메시지 (값은 이미 마스킹됨)
          echo "✅ ${ENV_KEY} 설정 완료"
        done < "$TEMP_ENV_FILE"

        # 임시 파일 삭제
        rm -f "$TEMP_ENV_FILE"