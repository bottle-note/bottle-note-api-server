name: Dev Deploy Workflow

on:
  push:
    branches:
      - main
      - pr/49
jobs:
  build-and-push:
    ## if: ${{ contains(github.event.head_commit.message, '#cd') }}
    runs-on: ubuntu-latest  # 워크플로우는 최신 Ubuntu 환경에서 실행됩니다.
    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      ## JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

        ## 원격 디렉토리 생성
      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_KEY }}
          script: mkdir -p /home/ubuntu/app/bottle-note

      ## 원격 환경에 코드 복사
      - name: copy project # ssh key를 이용해 현재 푸시된 소스를 서버에 복사한다.
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete # rsync 명령어 옵션
          remote_path: /home/ubuntu/app/bottle-note
          remote_host: ${{ secrets.DEV_SERVER_IP }}
          remote_user: ubuntu
          remote_key: ${{ secrets.DEV_SSH_KEY }}

      ## application-dev 파일 설정
      - name: set application-dev.yml
        run: |
          cd /home/ubuntu/app/bottle-note
          touch ./application-dev.yml
          echo "${{ secrets.APPLICATION_DEV }}" | base64 --decode > src/main/resources/application-dev.yml
          find src

        ## gradle 빌드
      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build

      ## 개발 도커 실행
      - name: docker compose up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            cd /home/ubuntu/app/bottle-note
            sudo docker ps -q | xargs -r sudo docker rm -f         
            docker-compose-dev up -d                                       
            docker image prune -f
      
