name: dev ci pipeline

on:
  workflow_dispatch:
  pull_request:
    branches:
      - dev

concurrency:
  group: "dev-ci"
  cancel-in-progress: true

jobs:
  dev_ci:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:24.0
        options: --privileged
        ports:
          - 1234:1234
        env:
          DOCKER_TLS_CERTDIR: ""

    env:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2"

    steps:
      - name: echo
        run: |
          echo "Branch: ${{ github.event.pull_request.base.ref || github.ref_name }}"

      - name: checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GIT_ACCESS_TOKEN }}

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: setup gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: install dependencies
        run: ./gradlew dependencies

      - name: run unit tests
        run: ./gradlew unit_test

      - name: run rules tests
        run: ./gradlew check_rule_test

      - name: run integration tests
        run: ./gradlew integration_test

      - name: build project
        run: ./gradlew build -x test --build-cache --parallel

      - name: store test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/reports/

      - name: publish test report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
