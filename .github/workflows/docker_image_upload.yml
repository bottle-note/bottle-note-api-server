name: Build and Push to ECR

on:
  push:
    branches:
      - feature/279

concurrency:
  group: "ecr-upload"
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GIT_ACCESS_TOKEN }}
      - name: Update submodules
        run: |
          git submodule update --init --recursive
          git submodule update --remote
      - name: setup env file
        run: cp git.environment-variables/deploy/.env .env
      - name: Set ECR credentials
        id: set-credentials
        run: |
          ECR_ACCESS_KEY=$(grep "ECR_ACCESS_KEY:" git.environment-variables/deploy/aws/ecr/properties.yaml | awk '{print $2}')
          ECR_SECRET_ACCESS_KEY=$(grep "ECR_SECRET_ACCESS_KEY:" git.environment-variables/deploy/aws/ecr/properties.yaml | awk '{print $2}')
          ECR_REGION=$(grep "ECR_REGION:" git.environment-variables/deploy/aws/ecr/properties.yaml | awk '{print $2}')

          echo "AWS_ACCESS_KEY_ID=$ECR_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$ECR_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_REGION=$ECR_REGION" >> $GITHUB_ENV
          echo "region=$ECR_REGION" >> $GITHUB_OUTPUT
          echo "리전 설정: $ECR_REGION"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ steps.set-credentials.outputs.region }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR repository if not exists
        run: |
          # ECR 저장소가 존재하는지 확인
          if ! aws ecr describe-repositories --repository-names bottle-note-api > /dev/null 2>&1; then
            echo "ECR 저장소 'bottle-note-api'가 존재하지 않습니다. 새로 생성합니다."
            aws ecr create-repository --repository-name bottle-note-api
          else
            echo "ECR 저장소 'bottle-note-api'가 이미 존재합니다."
          fi

      - name: Build, tag, and push to ECR
        run: |
          # 이미지 태그 생성
          IMAGE_TAG=$(date -u +"%Y%m%dT%H%M%SZ")

          # 이미지 빌드 및 푸시
          docker build -t ${{ steps.login-ecr.outputs.registry }}/bottle-note-api:$IMAGE_TAG .
          docker push ${{ steps.login-ecr.outputs.registry }}/bottle-note-api:$IMAGE_TAG

          echo "이미지가 성공적으로 푸시되었습니다: ${{ steps.login-ecr.outputs.registry }}/bottle-note-api:$IMAGE_TAG"
